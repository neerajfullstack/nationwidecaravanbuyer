function formatAMPM(d) { var c = d.getHours(), a = d.getMinutes(), b = d.getSeconds(), e = c >= 12 ? "PM" : "AM"; return c %= 12, a = a < 10 ? "0" + a : a, b = b < 10 ? "0" + b : b, (c = c || 12) + ":" + a + ":" + b + " " + e } function getUrlParameter(a) { a = a.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var b = new RegExp("[\\?&]" + a + "=([^&#]*)").exec(location.search); return null === b ? "" : decodeURIComponent(b[1].replace(/\+/g, " ")) }
function showLoader() { $("#preloader").fadeIn("slow") }
function hideLoader() { $("#preloader").fadeOut("slow") } jQuery(document).ready(function ($) { "use strict"; if ([].map.call(document.querySelectorAll(".mdc-button, .mdc-fab, .mdc-chip"), function (a) { return mdc.ripple.MDCRipple.attachTo(a) }), document.querySelector(".mdc-drawer.sidenav")) { let m = mdc.drawer.MDCDrawer.attachTo(document.querySelector(".mdc-drawer.sidenav")); $("#sidenav-toggle").on("click", function () { m.open = !0 }), $("#sidenav-close").on("click", function () { m.open = !1 }) } let b = Array.from(document.querySelectorAll(".mdc-menu-surface--anchor .mdc-menu")).filter(a => !a.parentNode.closest(".vertical-menu")); b.length && b.forEach(a => { let b = new mdc.menu.MDCMenu(a); b.root_.className.includes("user-menu") && (b.setFixedPosition(!0), $(window).on("scroll", function () { b.open = !1 })); let c = a.parentElement.querySelector(".mdc-button"); c.addEventListener("click", a => { a.preventDefault(), b.open = !b.open }), a.addEventListener("mouseleave", () => { b.open = !1 }), b.setAnchorCorner(mdc.menu.Corner.BOTTOM_START); let d = $(a).find(".mdc-list-item"); for (let e of d) e.addEventListener("click", b => { let a = $(c).find(".mdc-button__label > .mutable"); a.length && (a[0].innerHTML = b.target.innerText) }) }); let c = Array.from(document.querySelectorAll(".vertical-menu .mdc-menu-surface--anchor .mdc-menu")); c.length && c.forEach(a => { let b = new mdc.menu.MDCMenu(a), c = a.parentElement.querySelector(".mdc-button"); b.quickOpen = !0, c.addEventListener("click", a => { a.preventDefault(), b.open = !b.open }), a.addEventListener("mouseleave", () => { b.open = !0 }) }), $(window).on("scroll", function () { var a = $("#top-toolbar").height(); $(this).scrollTop() >= a ? ($("header").addClass("main-toolbar-fixed"), $("main").addClass("main-toolbar-fixed")) : ($("header").removeClass("main-toolbar-fixed"), $("main").removeClass("main-toolbar-fixed")), $(this).scrollTop() >= 300 ? $("#back-to-top").addClass("show") : $("#back-to-top").removeClass("show") }), $("#back-to-top").on("click", function () { $("html, body").animate({ scrollTop: 0 }, "slow") }), $("#options-toggle").on("click", function () { $(".options").toggleClass("show") }), $(".options .skin-primary").on("click", function () { var a = "css/skins/" + $(this).attr("data-name") + ".css"; $('link[rel="stylesheet"][href^="css/skins/"]').attr("href", a), $(".options").removeClass("show") }); var d, a, e, n = document.location.pathname.substring(document.location.pathname.lastIndexOf("/") + 1); if ($(".horizontal-menu a, .vertical-menu a").each(function (a) { $(this).attr("href") === n ? $(this).addClass("active-link") : $(this).removeClass("active-link") }), "undefined" != typeof Swiper) { function h(b) { if (d.slides) { var a = d.slides[b], c = $(a).find("[data-slide-title]")[0].getAttribute("data-slide-title"), e = $(a).find("[data-slide-location]")[0].getAttribute("data-slide-location"), f = $(a).find("[data-slide-price]")[0].getAttribute("data-slide-price"); $("#active-slide-info h1.slide-title").html(c), $("#active-slide-info .location span").html(e), $("#active-slide-info .mdc-button__label").html(f) } } function o(c, d) { d.slideTo(c.activeIndex); var a = $(".single-property .small-carousel .swiper-wrapper").children(); for (let b = 0; b < a.length; b++)a[b].classList.remove("active-thumb"); a[c.activeIndex].classList.add("active-thumb") } d = new Swiper(".header-carousel .swiper-container", { slidesPerView: 1, spaceBetween: 0, keyboard: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, pagination: !1, grabCursor: !0, loop: !0, preloadImages: !1, lazy: !0, autoplay: { delay: 5e3, disableOnInteraction: !1 }, speed: 500, effect: "slide" }), h(1), d.on("slideChange", function () { h(d.activeIndex) }), new Swiper(".property-item .property-image>.swiper-container", { observer: !0, observeParents: !0, slidesPerView: 1, spaceBetween: 0, keyboard: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, pagination: { el: ".swiper-pagination", type: "bullets", clickable: !0 }, grabCursor: !0, loop: !0, preloadImages: !1, lazy: !0, speed: 500, effect: "slide", nested: !0 }), new Swiper(".testimonials-carousel .swiper-container", { slidesPerView: 1, spaceBetween: 0, keyboard: !0, navigation: !0, pagination: { el: ".swiper-pagination", type: "bullets", clickable: !0 }, grabCursor: !0, loop: !0, preloadImages: !0, lazy: !1, speed: 500, effect: "slide" }), new Swiper(".properties-carousel>.swiper-container", { slidesPerView: 1, spaceBetween: 16, keyboard: !0, navigation: { nextEl: ".prop-next", prevEl: ".prop-prev" }, breakpoints: { 600: { slidesPerView: 2 }, 960: { slidesPerView: 3 }, 1280: { slidesPerView: 4 } }, allowTouchMove: !0 }), new Swiper(".agents-carousel .swiper-container", { slidesPerView: 1, spaceBetween: 16, keyboard: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, grabCursor: !0, loop: !0, preloadImages: !1, lazy: !0, breakpoints: { 600: { slidesPerView: 2 }, 960: { slidesPerView: 3 }, 1280: { slidesPerView: 4 } } }), new Swiper(".clients-carousel .swiper-container", { slidesPerView: 1, spaceBetween: 16, keyboard: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, grabCursor: !0, loop: !0, preloadImages: !1, lazy: !0, autoplay: { delay: 6e3, disableOnInteraction: !1 }, speed: 500, effect: "slide", breakpoints: { 320: { slidesPerView: 2 }, 480: { slidesPerView: 3 }, 600: { slidesPerView: 4 }, 960: { slidesPerView: 5 }, 1280: { slidesPerView: 6 }, 1500: { slidesPerView: 7 } } }), new Swiper(".compare-carousel .swiper-container", { slidesPerView: 1, spaceBetween: 16, keyboard: !0, navigation: { nextEl: ".prop-next", prevEl: ".prop-prev" }, breakpoints: { 600: { slidesPerView: 2 }, 960: { slidesPerView: 3 }, 1280: { slidesPerView: 4 } }, allowTouchMove: !0 }), a = new Swiper(".single-property .main-carousel .swiper-container", { slidesPerView: 1, spaceBetween: 0, keyboard: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, pagination: !1, grabCursor: !0, loop: !1, preloadImages: !1, lazy: !0, speed: 500, effect: "slide" }), e = new Swiper(".single-property .small-carousel .swiper-container", { slidesPerView: 1, spaceBetween: 16, keyboard: !0, pagination: !1, preloadImages: !1, grabCursor: !0, lazy: !0, breakpoints: { 320: { slidesPerView: 2 }, 480: { slidesPerView: 3 }, 600: { slidesPerView: 4 } }, allowTouchMove: !0 }), a.slides && e.slides && (setTimeout(() => { a.update(), e.update(), o(a, e) }, 100), a.on("slideChange", function () { e.slideTo(a.activeIndex), o(a, e) }), $(".single-property .small-carousel .swiper-slide").on("click", function () { a.slideTo($(this).index()) })) } if ([].map.call(document.querySelectorAll("#filters .mdc-text-field"), function (a) { return mdc.textField.MDCTextField.attachTo(a) }), [].map.call(document.querySelectorAll("#filters .mdc-select"), function (a) { return mdc.select.MDCSelect.attachTo(a) }), [].map.call(document.querySelectorAll("#filters .mdc-checkbox"), function (a) { return mdc.checkbox.MDCCheckbox.attachTo(a) }), [].slice.call(document.querySelectorAll(".mdc-chip-set")).forEach(function (a) { mdc.chips.MDCChipSet.attachTo(a) }), [].slice.call(document.querySelectorAll(".mdc-switch")).forEach(function (a) { mdc.switchControl.MDCSwitch.attachTo(a) }), $(".password-toggle").on("click", function () { var a = $(this).parent().find("input")[0]; "visibility" == this.innerHTML ? (this.innerHTML = "visibility_off", a.type = "password") : (this.innerHTML = "visibility", a.type = "text") }), document.querySelector(".mdc-drawer.page-sidenav")) { let p = document.querySelector(".mdc-drawer.page-sidenav"), q = document.querySelector(".page-sidenav-scrim"), r = mdc.drawer.MDCDrawer.attachTo(document.querySelector(".mdc-drawer.page-sidenav")); $("#page-sidenav-toggle").on("click", function () { r.open = !0 }); let i = () => { p.classList.remove("mdc-drawer--modal"), p.classList.add("mdc-drawer--dismissible"), q.classList.add("d-none"); let a = mdc.drawer.MDCDrawer.attachTo(p); return a.open = !0, a }, j = () => { p.classList.remove("mdc-drawer--dismissible"), p.classList.add("mdc-drawer--modal"), q.classList.remove("d-none"); let a = mdc.drawer.MDCDrawer.attachTo(p); return a.open = !1, a }, s = window.matchMedia("(max-width: 959px)").matches ? j() : i(), k = () => { window.matchMedia("(max-width: 959px)").matches ? (s.destroy(), s = j()) : window.matchMedia("(min-width: 959px)").matches && (s.destroy(), s = i()) }; "undefined" != typeof MobileDetect && null === new MobileDetect(window.navigator.userAgent).phone() && window.addEventListener("resize", k) } $(".expansion-panel").each(function (a) { 0 === a ? ($(this).addClass("expanded"), $(this).find(".expansion-panel-body").slideDown("fast")) : $(this).find(".expansion-panel-body").slideUp("fast") }), $(".expansion-panel .expansion-panel-header").on("click", function () { var a = $(this).parent().find(".expansion-panel-body"); a.is(":visible") ? ($(this).parent().removeClass("expanded"), a.slideUp("fast")) : ($(this).parent().addClass("expanded"), a.slideDown("fast")) }); let f = Array.from(document.querySelectorAll(".mdc-tab-bar")); if (f.length && f.forEach(a => { let b = new mdc.tabBar.MDCTabBar(a); var c = a.parentElement.querySelectorAll(".tab-content"); b.listen("MDCTabBar:activated", function (b) { a.parentElement.querySelector(".tab-content--active").classList.remove("tab-content--active"), c[b.detail.index].classList.add("tab-content--active") }), c.forEach((a, e) => { let c = a.querySelector(".next-tab"), d = a.querySelector(".prev-tab"); c && c.addEventListener("click", () => { b.activateTab(e + 1) }), d && d.addEventListener("click", () => { b.activateTab(e - 1) }) }) }), getUrlParameter("skin")) { var l = "css/skins/" + getUrlParameter("skin") + ".css"; $('link[rel="stylesheet"][href^="css/skins/"]').attr("href", l) } $(".time").text(formatAMPM(new Date)), setInterval(function () { $(".time").text(formatAMPM(new Date)) }, 1e3); var g = document.getElementById("favorites-snackbar"); if (g) { let t = mdc.snackbar.MDCSnackbar.attachTo(g); $(".add-to-favorite").on("click", function () { t.open() }) } })